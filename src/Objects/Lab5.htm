<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Lab5.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Lab5.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Thu Apr 29 18:19:44 2021
<BR><P>
<H3>Maximum Stack Usage =        296 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
DayViewDraw &rArr; DrawTimeslotsAndEvents &rArr; DrawTimeslots &rArr; DrawString &rArr; BSP_LCD_DrawString &rArr; BSP_LCD_DrawChar &rArr; setAddrWindow
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[12]">SysTick_Handler</a>
 <LI><a href="#[166]">StartOS</a>
 <LI><a href="#[a4]">DisableInterrupts</a>
 <LI><a href="#[a5]">EnableInterrupts</a>
 <LI><a href="#[a6]">StartCritical</a>
 <LI><a href="#[a7]">EndCritical</a>
 <LI><a href="#[a8]">WaitForInterrupt</a>
 <LI><a href="#[a9]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[a]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">NMI_Handler</a><BR>
 <LI><a href="#[b]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">HardFault_Handler</a><BR>
 <LI><a href="#[c]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">MemManage_Handler</a><BR>
 <LI><a href="#[d]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">BusFault_Handler</a><BR>
 <LI><a href="#[e]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">UsageFault_Handler</a><BR>
 <LI><a href="#[f]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">SVC_Handler</a><BR>
 <LI><a href="#[10]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">DebugMon_Handler</a><BR>
 <LI><a href="#[11]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">PendSV_Handler</a><BR>
 <LI><a href="#[13]">GPIOPortA_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">GPIOPortA_Handler</a><BR>
 <LI><a href="#[14]">GPIOPortB_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">GPIOPortB_Handler</a><BR>
 <LI><a href="#[15]">GPIOPortC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">GPIOPortC_Handler</a><BR>
 <LI><a href="#[16]">GPIOPortD_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">GPIOPortD_Handler</a><BR>
 <LI><a href="#[17]">GPIOPortE_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">GPIOPortE_Handler</a><BR>
 <LI><a href="#[18]">UART0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">UART0_Handler</a><BR>
 <LI><a href="#[19]">UART1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">UART1_Handler</a><BR>
 <LI><a href="#[1a]">SSI0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">SSI0_Handler</a><BR>
 <LI><a href="#[1b]">I2C0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">I2C0_Handler</a><BR>
 <LI><a href="#[1c]">PMW0_FAULT_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">PMW0_FAULT_Handler</a><BR>
 <LI><a href="#[1d]">PWM0Generator0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">PWM0Generator0_Handler</a><BR>
 <LI><a href="#[1e]">PWM0Generator1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">PWM0Generator1_Handler</a><BR>
 <LI><a href="#[1f]">PWM0Generator2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">PWM0Generator2_Handler</a><BR>
 <LI><a href="#[20]">Quadrature0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">Quadrature0_Handler</a><BR>
 <LI><a href="#[21]">ADC0Seq0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">ADC0Seq0_Handler</a><BR>
 <LI><a href="#[22]">ADC0Seq1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">ADC0Seq1_Handler</a><BR>
 <LI><a href="#[23]">ADC0Seq2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">ADC0Seq2_Handler</a><BR>
 <LI><a href="#[24]">ADC0Seq3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">ADC0Seq3_Handler</a><BR>
 <LI><a href="#[25]">WDT_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">WDT_Handler</a><BR>
 <LI><a href="#[26]">TIMER0A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">TIMER0A_Handler</a><BR>
 <LI><a href="#[27]">TIMER0B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">TIMER0B_Handler</a><BR>
 <LI><a href="#[28]">TIMER1A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">TIMER1A_Handler</a><BR>
 <LI><a href="#[29]">TIMER1B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[29]">TIMER1B_Handler</a><BR>
 <LI><a href="#[2a]">TIMER2A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a]">TIMER2A_Handler</a><BR>
 <LI><a href="#[2b]">TIMER2B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b]">TIMER2B_Handler</a><BR>
 <LI><a href="#[2c]">COMP0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">COMP0_Handler</a><BR>
 <LI><a href="#[2d]">COMP1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2d]">COMP1_Handler</a><BR>
 <LI><a href="#[2e]">COMP2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2e]">COMP2_Handler</a><BR>
 <LI><a href="#[2f]">SYSCTL_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2f]">SYSCTL_Handler</a><BR>
 <LI><a href="#[30]">FlashCtl_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[30]">FlashCtl_Handler</a><BR>
 <LI><a href="#[31]">GPIOPortF_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[31]">GPIOPortF_Handler</a><BR>
 <LI><a href="#[32]">GPIOPortG_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[32]">GPIOPortG_Handler</a><BR>
 <LI><a href="#[33]">GPIOPortH_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[33]">GPIOPortH_Handler</a><BR>
 <LI><a href="#[34]">UART2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[34]">UART2_Handler</a><BR>
 <LI><a href="#[35]">SSI1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[35]">SSI1_Handler</a><BR>
 <LI><a href="#[36]">TIMER3A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[36]">TIMER3A_Handler</a><BR>
 <LI><a href="#[37]">TIMER3B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[37]">TIMER3B_Handler</a><BR>
 <LI><a href="#[38]">I2C1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[38]">I2C1_Handler</a><BR>
 <LI><a href="#[39]">Quadrature1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[39]">Quadrature1_Handler</a><BR>
 <LI><a href="#[3a]">CAN0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3a]">CAN0_Handler</a><BR>
 <LI><a href="#[3b]">CAN1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b]">CAN1_Handler</a><BR>
 <LI><a href="#[3c]">CAN2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3c]">CAN2_Handler</a><BR>
 <LI><a href="#[3d]">Hibernate_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3d]">Hibernate_Handler</a><BR>
 <LI><a href="#[3e]">USB0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3e]">USB0_Handler</a><BR>
 <LI><a href="#[3f]">PWM0Generator3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3f]">PWM0Generator3_Handler</a><BR>
 <LI><a href="#[40]">UDMA_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[40]">UDMA_Handler</a><BR>
 <LI><a href="#[41]">UDMAERR_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[41]">UDMAERR_Handler</a><BR>
 <LI><a href="#[42]">ADC1Seq0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[42]">ADC1Seq0_Handler</a><BR>
 <LI><a href="#[43]">ADC1Seq1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[43]">ADC1Seq1_Handler</a><BR>
 <LI><a href="#[44]">ADC1Seq2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[44]">ADC1Seq2_Handler</a><BR>
 <LI><a href="#[45]">ADC1Seq3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[45]">ADC1Seq3_Handler</a><BR>
 <LI><a href="#[46]">GPIOPortJ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[46]">GPIOPortJ_Handler</a><BR>
 <LI><a href="#[47]">GPIOPortK_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[47]">GPIOPortK_Handler</a><BR>
 <LI><a href="#[48]">GPIOPortL_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[48]">GPIOPortL_Handler</a><BR>
 <LI><a href="#[49]">SSI2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[49]">SSI2_Handler</a><BR>
 <LI><a href="#[4a]">SSI3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4a]">SSI3_Handler</a><BR>
 <LI><a href="#[4b]">UART3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4b]">UART3_Handler</a><BR>
 <LI><a href="#[4c]">UART4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4c]">UART4_Handler</a><BR>
 <LI><a href="#[4d]">UART5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4d]">UART5_Handler</a><BR>
 <LI><a href="#[4e]">UART6_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4e]">UART6_Handler</a><BR>
 <LI><a href="#[4f]">UART7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4f]">UART7_Handler</a><BR>
 <LI><a href="#[50]">I2C2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[50]">I2C2_Handler</a><BR>
 <LI><a href="#[51]">I2C3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[51]">I2C3_Handler</a><BR>
 <LI><a href="#[52]">TIMER4A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[52]">TIMER4A_Handler</a><BR>
 <LI><a href="#[53]">TIMER4B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[53]">TIMER4B_Handler</a><BR>
 <LI><a href="#[55]">TIMER5B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[55]">TIMER5B_Handler</a><BR>
 <LI><a href="#[56]">WideTimer0A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[56]">WideTimer0A_Handler</a><BR>
 <LI><a href="#[57]">WideTimer0B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[57]">WideTimer0B_Handler</a><BR>
 <LI><a href="#[58]">WideTimer1A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[58]">WideTimer1A_Handler</a><BR>
 <LI><a href="#[59]">WideTimer1B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[59]">WideTimer1B_Handler</a><BR>
 <LI><a href="#[5a]">WideTimer2A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5a]">WideTimer2A_Handler</a><BR>
 <LI><a href="#[5b]">WideTimer2B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5b]">WideTimer2B_Handler</a><BR>
 <LI><a href="#[5d]">WideTimer3B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5d]">WideTimer3B_Handler</a><BR>
 <LI><a href="#[5f]">WideTimer4B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5f]">WideTimer4B_Handler</a><BR>
 <LI><a href="#[61]">WideTimer5B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[61]">WideTimer5B_Handler</a><BR>
 <LI><a href="#[62]">FPU_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[62]">FPU_Handler</a><BR>
 <LI><a href="#[63]">I2C4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[63]">I2C4_Handler</a><BR>
 <LI><a href="#[64]">I2C5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[64]">I2C5_Handler</a><BR>
 <LI><a href="#[65]">GPIOPortM_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[65]">GPIOPortM_Handler</a><BR>
 <LI><a href="#[66]">GPIOPortN_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[66]">GPIOPortN_Handler</a><BR>
 <LI><a href="#[67]">QEI2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[67]">QEI2_Handler</a><BR>
 <LI><a href="#[68]">GPIOPortP0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[68]">GPIOPortP0_Handler</a><BR>
 <LI><a href="#[69]">GPIOPortP1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[69]">GPIOPortP1_Handler</a><BR>
 <LI><a href="#[6a]">GPIOPortP2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6a]">GPIOPortP2_Handler</a><BR>
 <LI><a href="#[6b]">GPIOPortP3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6b]">GPIOPortP3_Handler</a><BR>
 <LI><a href="#[6c]">GPIOPortP4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6c]">GPIOPortP4_Handler</a><BR>
 <LI><a href="#[6d]">GPIOPortP5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6d]">GPIOPortP5_Handler</a><BR>
 <LI><a href="#[6e]">GPIOPortP6_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6e]">GPIOPortP6_Handler</a><BR>
 <LI><a href="#[6f]">GPIOPortP7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6f]">GPIOPortP7_Handler</a><BR>
 <LI><a href="#[70]">GPIOPortQ0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[70]">GPIOPortQ0_Handler</a><BR>
 <LI><a href="#[71]">GPIOPortQ1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[71]">GPIOPortQ1_Handler</a><BR>
 <LI><a href="#[72]">GPIOPortQ2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[72]">GPIOPortQ2_Handler</a><BR>
 <LI><a href="#[73]">GPIOPortQ3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[73]">GPIOPortQ3_Handler</a><BR>
 <LI><a href="#[74]">GPIOPortQ4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[74]">GPIOPortQ4_Handler</a><BR>
 <LI><a href="#[75]">GPIOPortQ5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[75]">GPIOPortQ5_Handler</a><BR>
 <LI><a href="#[76]">GPIOPortQ6_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[76]">GPIOPortQ6_Handler</a><BR>
 <LI><a href="#[77]">GPIOPortQ7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[77]">GPIOPortQ7_Handler</a><BR>
 <LI><a href="#[78]">GPIOPortR_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[78]">GPIOPortR_Handler</a><BR>
 <LI><a href="#[79]">GPIOPortS_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[79]">GPIOPortS_Handler</a><BR>
 <LI><a href="#[7a]">PWM1Generator0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7a]">PWM1Generator0_Handler</a><BR>
 <LI><a href="#[7b]">PWM1Generator1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7b]">PWM1Generator1_Handler</a><BR>
 <LI><a href="#[7c]">PWM1Generator2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7c]">PWM1Generator2_Handler</a><BR>
 <LI><a href="#[7d]">PWM1Generator3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7d]">PWM1Generator3_Handler</a><BR>
 <LI><a href="#[7e]">PWM1Fault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7e]">PWM1Fault_Handler</a><BR>
 <LI><a href="#[be]">parrotdelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[be]">parrotdelay</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[21]">ADC0Seq0_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[22]">ADC0Seq1_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[23]">ADC0Seq2_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[24]">ADC0Seq3_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[42]">ADC1Seq0_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[43]">ADC1Seq1_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[44]">ADC1Seq2_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[45]">ADC1Seq3_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[d]">BusFault_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[3a]">CAN0_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[3b]">CAN1_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[3c]">CAN2_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[2c]">COMP0_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[2d]">COMP1_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[2e]">COMP2_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[82]">DayViewDraw</a> from day_view.o(i.DayViewDraw) referenced from day_view.o(i.InitDayView)
 <LI><a href="#[10]">DebugMon_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[62]">FPU_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[30]">FlashCtl_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[13]">GPIOPortA_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[14]">GPIOPortB_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[15]">GPIOPortC_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[16]">GPIOPortD_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[17]">GPIOPortE_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[31]">GPIOPortF_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[32]">GPIOPortG_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[33]">GPIOPortH_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[46]">GPIOPortJ_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[47]">GPIOPortK_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[48]">GPIOPortL_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[65]">GPIOPortM_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[66]">GPIOPortN_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[68]">GPIOPortP0_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[69]">GPIOPortP1_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[6a]">GPIOPortP2_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[6b]">GPIOPortP3_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[6c]">GPIOPortP4_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[6d]">GPIOPortP5_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[6e]">GPIOPortP6_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[6f]">GPIOPortP7_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[70]">GPIOPortQ0_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[71]">GPIOPortQ1_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[72]">GPIOPortQ2_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[73]">GPIOPortQ3_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[74]">GPIOPortQ4_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[75]">GPIOPortQ5_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[76]">GPIOPortQ6_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[77]">GPIOPortQ7_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[78]">GPIOPortR_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[79]">GPIOPortS_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[b]">HardFault_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[3d]">Hibernate_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[1b]">I2C0_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[38]">I2C1_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[50]">I2C2_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[51]">I2C3_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[63]">I2C4_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[64]">I2C5_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[97]">ImplCopyScheduledEvent</a> from scheduler_view.o(i.ImplCopyScheduledEvent) referenced from scheduler_view.o(i.InitSchedulerView)
 <LI><a href="#[88]">ImplGetCurrTimeslot</a> from day_view.o(i.ImplGetCurrTimeslot) referenced from day_view.o(i.InitDayView)
 <LI><a href="#[84]">ImplGetDate</a> from day_view.o(i.ImplGetDate) referenced from day_view.o(i.InitDayView)
 <LI><a href="#[8f]">ImplGetDateMonthView</a> from month_view.o(i.ImplGetDateMonthView) referenced from month_view.o(i.InitMonthView)
 <LI><a href="#[98]">ImplGetSchedulerViewState</a> from scheduler_view.o(i.ImplGetSchedulerViewState) referenced from scheduler_view.o(i.InitSchedulerView)
 <LI><a href="#[8c]">ImplGetSelectedEvent</a> from day_view.o(i.ImplGetSelectedEvent) referenced from day_view.o(i.InitDayView)
 <LI><a href="#[8e]">ImplMonthViewDraw</a> from month_view.o(i.ImplMonthViewDraw) referenced from month_view.o(i.InitMonthView)
 <LI><a href="#[9e]">ImplMoveFocusDown</a> from scheduler_view.o(i.ImplMoveFocusDown) referenced from scheduler_view.o(i.InitSchedulerView)
 <LI><a href="#[9f]">ImplMoveFocusLeft</a> from scheduler_view.o(i.ImplMoveFocusLeft) referenced from scheduler_view.o(i.InitSchedulerView)
 <LI><a href="#[a0]">ImplMoveFocusRight</a> from scheduler_view.o(i.ImplMoveFocusRight) referenced from scheduler_view.o(i.InitSchedulerView)
 <LI><a href="#[9d]">ImplMoveFocusUp</a> from scheduler_view.o(i.ImplMoveFocusUp) referenced from scheduler_view.o(i.InitSchedulerView)
 <LI><a href="#[9b]">ImplSelectCurrElement</a> from scheduler_view.o(i.ImplSelectCurrElement) referenced from scheduler_view.o(i.InitSchedulerView)
 <LI><a href="#[93]">ImplSelectNextDay</a> from month_view.o(i.ImplSelectNextDay) referenced from month_view.o(i.InitMonthView)
 <LI><a href="#[89]">ImplSelectNextEvent</a> from day_view.o(i.ImplSelectNextEvent) referenced from day_view.o(i.InitDayView)
 <LI><a href="#[85]">ImplSelectNextTimeslot</a> from day_view.o(i.ImplSelectNextTimeslot) referenced from day_view.o(i.InitDayView)
 <LI><a href="#[91]">ImplSelectNextWeek</a> from month_view.o(i.ImplSelectNextWeek) referenced from month_view.o(i.InitMonthView)
 <LI><a href="#[94]">ImplSelectPrevDay</a> from month_view.o(i.ImplSelectPrevDay) referenced from month_view.o(i.InitMonthView)
 <LI><a href="#[8a]">ImplSelectPrevEvent</a> from day_view.o(i.ImplSelectPrevEvent) referenced from day_view.o(i.InitDayView)
 <LI><a href="#[86]">ImplSelectPrevTimeslot</a> from day_view.o(i.ImplSelectPrevTimeslot) referenced from day_view.o(i.InitDayView)
 <LI><a href="#[92]">ImplSelectPrevWeek</a> from month_view.o(i.ImplSelectPrevWeek) referenced from month_view.o(i.InitMonthView)
 <LI><a href="#[87]">ImplSetCurrTimeslot</a> from day_view.o(i.ImplSetCurrTimeslot) referenced from day_view.o(i.InitDayView)
 <LI><a href="#[83]">ImplSetDate</a> from day_view.o(i.ImplSetDate) referenced from day_view.o(i.InitDayView)
 <LI><a href="#[99]">ImplSetEventBaseInfo</a> from scheduler_view.o(i.ImplSetEventBaseInfo) referenced from scheduler_view.o(i.InitSchedulerView)
 <LI><a href="#[8b]">ImplSetEvents</a> from day_view.o(i.ImplSetEvents) referenced from day_view.o(i.InitDayView)
 <LI><a href="#[9a]">ImplSetExistingEventInfo</a> from scheduler_view.o(i.ImplSetExistingEventInfo) referenced from scheduler_view.o(i.InitSchedulerView)
 <LI><a href="#[90]">ImplSetMonthInfo</a> from month_view.o(i.ImplSetMonthInfo) referenced from month_view.o(i.InitMonthView)
 <LI><a href="#[9c]">ImplUnselectCurrElement</a> from scheduler_view.o(i.ImplUnselectCurrElement) referenced from scheduler_view.o(i.InitSchedulerView)
 <LI><a href="#[c]">MemManage_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[a]">NMI_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[1c]">PMW0_FAULT_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[1d]">PWM0Generator0_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[1e]">PWM0Generator1_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[1f]">PWM0Generator2_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[3f]">PWM0Generator3_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[7e]">PWM1Fault_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[7a]">PWM1Generator0_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[7b]">PWM1Generator1_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[7c]">PWM1Generator2_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[7d]">PWM1Generator3_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[11]">PendSV_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[67]">QEI2_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[20]">Quadrature0_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[39]">Quadrature1_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[a2]">Reset_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[1a]">SSI0_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[35]">SSI1_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[49]">SSI2_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[4a]">SSI3_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[f]">SVC_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[2f]">SYSCTL_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[96]">SchedulerViewDraw</a> from scheduler_view.o(i.SchedulerViewDraw) referenced from scheduler_view.o(i.InitSchedulerView)
 <LI><a href="#[12]">SysTick_Handler</a> from osasm.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[26]">TIMER0A_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[27]">TIMER0B_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[28]">TIMER1A_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[29]">TIMER1B_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[2a]">TIMER2A_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[2b]">TIMER2B_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[36]">TIMER3A_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[37]">TIMER3B_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[52]">TIMER4A_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[53]">TIMER4B_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[54]">TIMER5A_Handler</a> from texas.o(i.TIMER5A_Handler) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[55]">TIMER5B_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[18]">UART0_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[19]">UART1_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[34]">UART2_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[4b]">UART3_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[4c]">UART4_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[4d]">UART5_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[4e]">UART6_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[4f]">UART7_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[41]">UDMAERR_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[40]">UDMA_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[3e]">USB0_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[8d]">UpdateDayView</a> from day_view_controller.o(i.UpdateDayView) referenced from day_view_controller.o(i.InitDayViewController)
 <LI><a href="#[95]">UpdateMonthView</a> from month_view_controller.o(i.UpdateMonthView) referenced from month_view_controller.o(i.InitMonthViewController)
 <LI><a href="#[a1]">UpdateSchedulerView</a> from scheduler_view_controller.o(i.UpdateSchedulerView) referenced from scheduler_view_controller.o(i.InitSchedulerViewController)
 <LI><a href="#[e]">UsageFault_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[25]">WDT_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[56]">WideTimer0A_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[57]">WideTimer0B_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[58]">WideTimer1A_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[59]">WideTimer1B_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[5a]">WideTimer2A_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[5b]">WideTimer2B_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[5c]">WideTimer3A_Handler</a> from bsp.o(i.WideTimer3A_Handler) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[5d]">WideTimer3B_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[5e]">WideTimer4A_Handler</a> from bsp.o(i.WideTimer4A_Handler) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[5f]">WideTimer4B_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[60]">WideTimer5A_Handler</a> from bsp.o(i.WideTimer5A_Handler) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[61]">WideTimer5B_Handler</a> from startup_tm4c123.o(.text) referenced from startup_tm4c123.o(RESET)
 <LI><a href="#[a3]">__main</a> from __main.o(!!!main) referenced from startup_tm4c123.o(.text)
 <LI><a href="#[81]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[80]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[a3]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[aa]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[ac]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[13e]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[13f]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[140]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[141]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[142]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[ad]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[cd]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[af]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[143]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[b6]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[144]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[b1]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[145]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[146]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[147]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[148]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[149]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[14a]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[14b]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[14c]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[14d]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[14e]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[14f]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[150]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[151]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[152]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[153]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[154]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[155]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[156]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[157]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[158]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[bb]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[159]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[15a]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[15b]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[15c]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[15d]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[15e]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[15f]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[160]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[ab]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[161]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[b3]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[b5]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[162]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[b7]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; ControllerUpdate &rArr; FillScreen &rArr; BSP_LCD_FillScreen &rArr; BSP_LCD_FillRect &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[163]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[dc]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[ba]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[164]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[bc]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[be]"></a>parrotdelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parrotdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parrotdelay
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Delay1ms
</UL>

<P><STRONG><a name="[12]"></a>SysTick_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, osasm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = SysTick_Handler &rArr; Scheduler &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scheduler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[165]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, maybetermalloc1.o(.emb_text), UNUSED)

<P><STRONG><a name="[166]"></a>StartOS</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, osasm.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))

<P><STRONG><a name="[a]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>GPIOPortA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortA_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortA_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>GPIOPortB_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortB_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortB_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>GPIOPortC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>GPIOPortD_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortD_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortD_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>GPIOPortE_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortE_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortE_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>UART0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>UART1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SSI0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSI0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSI0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>I2C0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>PMW0_FAULT_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMW0_FAULT_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMW0_FAULT_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>PWM0Generator0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0Generator0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0Generator0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PWM0Generator1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0Generator1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0Generator1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>PWM0Generator2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0Generator2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0Generator2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>Quadrature0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quadrature0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quadrature0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>ADC0Seq0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0Seq0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0Seq0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>ADC0Seq1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0Seq1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0Seq1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>ADC0Seq2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0Seq2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0Seq2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>ADC0Seq3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0Seq3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0Seq3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>WDT_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIMER0A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIMER0B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIMER1A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIMER1B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIMER2A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIMER2B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>COMP0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>COMP1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>COMP2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SYSCTL_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTL_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTL_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>FlashCtl_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashCtl_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashCtl_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>GPIOPortF_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortF_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortF_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>GPIOPortG_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortG_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortG_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>GPIOPortH_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortH_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortH_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>UART2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>SSI1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSI1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSI1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIMER3A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIMER3B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>I2C1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>Quadrature1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quadrature1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quadrature1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>CAN0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>CAN1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>CAN2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>Hibernate_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hibernate_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hibernate_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>USB0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>PWM0Generator3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0Generator3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0Generator3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>UDMA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDMA_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDMA_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>UDMAERR_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDMAERR_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDMAERR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>ADC1Seq0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1Seq0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1Seq0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>ADC1Seq1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1Seq1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1Seq1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>ADC1Seq2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1Seq2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1Seq2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>ADC1Seq3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1Seq3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1Seq3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>GPIOPortJ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortJ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortJ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>GPIOPortK_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortK_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortK_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>GPIOPortL_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortL_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortL_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SSI2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSI2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSI2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>SSI3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSI3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSI3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>UART3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>UART4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>UART5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>UART6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>UART7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>I2C2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>I2C3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIMER4A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER4A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER4A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TIMER4B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER4B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER4B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>TIMER5B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER5B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER5B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>WideTimer0A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WideTimer0A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WideTimer0A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>WideTimer0B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WideTimer0B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WideTimer0B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>WideTimer1A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WideTimer1A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WideTimer1A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>WideTimer1B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WideTimer1B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WideTimer1B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>WideTimer2A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WideTimer2A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WideTimer2A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>WideTimer2B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WideTimer2B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WideTimer2B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>WideTimer3B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WideTimer3B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WideTimer3B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>WideTimer4B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WideTimer4B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WideTimer4B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>WideTimer5B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WideTimer5B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WideTimer5B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>FPU_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPU_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPU_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>I2C4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>I2C5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>GPIOPortM_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortM_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortM_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>GPIOPortN_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortN_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortN_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>QEI2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEI2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEI2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>GPIOPortP0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortP0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortP0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>GPIOPortP1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortP1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortP1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>GPIOPortP2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortP2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortP2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>GPIOPortP3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortP3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortP3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>GPIOPortP4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortP4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortP4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>GPIOPortP5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortP5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortP5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>GPIOPortP6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortP6_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortP6_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>GPIOPortP7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortP7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortP7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>GPIOPortQ0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortQ0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortQ0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>GPIOPortQ1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortQ1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortQ1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>GPIOPortQ2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortQ2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortQ2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>GPIOPortQ3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortQ3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortQ3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>GPIOPortQ4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortQ4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortQ4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>GPIOPortQ5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortQ5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortQ5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>GPIOPortQ6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortQ6_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortQ6_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>GPIOPortQ7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortQ7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortQ7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>GPIOPortR_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortR_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>GPIOPortS_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortS_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortS_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>PWM1Generator0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1Generator0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1Generator0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>PWM1Generator1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1Generator1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1Generator1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>PWM1Generator2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1Generator2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1Generator2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>PWM1Generator3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1Generator3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1Generator3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>PWM1Fault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1Fault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1Fault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>DisableInterrupts</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_tm4c123.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a5]"></a>EnableInterrupts</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_tm4c123.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[a6]"></a>StartCritical</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_tm4c123.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[a7]"></a>EndCritical</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_tm4c123.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[a8]"></a>WaitForInterrupt</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_tm4c123.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[a9]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_tm4c123.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[c0]"></a>calloc</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, calloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = calloc &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSchedulerView
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonthView
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayView
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHeaderSchedulerView
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventStartTime
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventName
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventEndtime
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHeaderMonthView
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTimeslots
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHeaderDayView
</UL>

<P><STRONG><a name="[c3]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHeaderSchedulerView
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventStartTime
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventName
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventEndtime
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHeaderMonthView
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTimeslots
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHeaderDayView
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[123]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scheduler
</UL>

<P><STRONG><a name="[167]"></a>_ll_udiv</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>__2sprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHeaderSchedulerView
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventStartTime
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventName
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventEndtime
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHeaderMonthView
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDayNumbers
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTimeslots
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHeaderDayView
</UL>

<P><STRONG><a name="[c8]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[c9]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[c7]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[ae]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[cb]"></a>__printf</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, __printf_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[11a]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImplSelectCurrElement
</UL>

<P><STRONG><a name="[11b]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImplSetExistingEventInfo
</UL>

<P><STRONG><a name="[ce]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[168]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[cf]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTimeslotsAndEvents
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[169]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[16a]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[16b]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[10e]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSchedulerView
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMonthView
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDayView
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTimeslotsAndEvents
</UL>

<P><STRONG><a name="[16c]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[16d]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[16e]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[16f]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[170]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[7]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[6]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[d2]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[b2]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[c1]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>

<P><STRONG><a name="[ca]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[c6]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[80]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[d5]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[d6]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[b0]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[c2]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>

<P><STRONG><a name="[d7]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[171]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[172]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[173]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[3]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[d1]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[d3]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[b4]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[b9]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[da]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[d9]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[bd]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[174]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[175]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[dd]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[176]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[ec]"></a>AddMinsToTimeslot</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, date_time_lib.o(i.AddMinsToTimeslot))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = AddMinsToTimeslot
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImplMoveFocusDown
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventEndtime
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImplSelectNextTimeslot
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateTimeslots
</UL>

<P><STRONG><a name="[134]"></a>BSP_Button1_Init</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, bsp.o(i.BSP_Button1_Init))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[135]"></a>BSP_Button2_Init</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, bsp.o(i.BSP_Button2_Init))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[132]"></a>BSP_Clock_InitFastest</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, bsp.o(i.BSP_Clock_InitFastest))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[df]"></a>BSP_Delay1ms</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp.o(i.BSP_Delay1ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_Delay1ms
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parrotdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commonInit
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commandList
</UL>

<P><STRONG><a name="[103]"></a>BSP_LCD_Color565</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp.o(i.BSP_LCD_Color565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_LCD_Color565
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillScreen
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillRect
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVLine
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawString
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
</UL>

<P><STRONG><a name="[e0]"></a>BSP_LCD_DrawChar</STRONG> (Thumb, 260 bytes, Stack size 56 bytes, bsp.o(i.BSP_LCD_DrawChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BSP_LCD_DrawChar &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAddrWindow
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pushColor
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_DrawString
</UL>

<P><STRONG><a name="[e3]"></a>BSP_LCD_DrawFastHLine</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, bsp.o(i.BSP_LCD_DrawFastHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BSP_LCD_DrawFastHLine &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writedata
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAddrWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
</UL>

<P><STRONG><a name="[e5]"></a>BSP_LCD_DrawFastVLine</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, bsp.o(i.BSP_LCD_DrawFastVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BSP_LCD_DrawFastVLine &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writedata
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAddrWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVLine
</UL>

<P><STRONG><a name="[e6]"></a>BSP_LCD_DrawString</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, bsp.o(i.BSP_LCD_DrawString))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = BSP_LCD_DrawString &rArr; BSP_LCD_DrawChar &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_DrawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawString
</UL>

<P><STRONG><a name="[e7]"></a>BSP_LCD_FillRect</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, bsp.o(i.BSP_LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BSP_LCD_FillRect &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writedata
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAddrWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_FillScreen
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillRect
</UL>

<P><STRONG><a name="[e8]"></a>BSP_LCD_FillScreen</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, bsp.o(i.BSP_LCD_FillScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BSP_LCD_FillScreen &rArr; BSP_LCD_FillRect &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_InitR
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillScreen
</UL>

<P><STRONG><a name="[e9]"></a>BSP_LCD_Init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, bsp.o(i.BSP_LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BSP_LCD_Init &rArr; ST7735_InitR &rArr; BSP_LCD_FillScreen &rArr; BSP_LCD_FillRect &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_InitR
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[122]"></a>BSP_LCD_SetCursor</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bsp.o(i.BSP_LCD_SetCursor))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_InitR
</UL>

<P><STRONG><a name="[fa]"></a>CalculateDayPosition</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, month_view.o(i.CalculateDayPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CalculateDayPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSelectedDayIndicator
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDayNumbers
</UL>

<P><STRONG><a name="[eb]"></a>CalculateTimeslots</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, day_view.o(i.CalculateTimeslots))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CalculateTimeslots &rArr; AddMinsToTimeslot
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddMinsToTimeslot
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTimeslotsAndEvents
</UL>

<P><STRONG><a name="[ed]"></a>ControllerUpdate</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, controller.o(i.ControllerUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ControllerUpdate &rArr; FillScreen &rArr; BSP_LCD_FillScreen &rArr; BSP_LCD_FillRect &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>DayViewDraw</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, day_view.o(i.DayViewDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = DayViewDraw &rArr; DrawTimeslotsAndEvents &rArr; DrawTimeslots &rArr; DrawString &rArr; BSP_LCD_DrawString &rArr; BSP_LCD_DrawChar &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillScreen
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecalculateEventPlacement
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTimeslotsAndEvents
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHeaderDayView
</UL>
<BR>[Address Reference Count : 1]<UL><LI> day_view.o(i.InitDayView)
</UL>
<P><STRONG><a name="[f2]"></a>DayViewSetup</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lab5.o(i.DayViewSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DayViewSetup &rArr; InitDayViewController &rArr; GetDayView &rArr; calloc &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDayViewController
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayView
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12d]"></a>DeleteEvent</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lab5.o(i.DeleteEvent))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSchedulerView
</UL>

<P><STRONG><a name="[f7]"></a>DoTimeslotsOverlap</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, date_time_lib.o(i.DoTimeslotsOverlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DoTimeslotsOverlap
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecalculateEventPlacement
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImplSelectPrevEvent
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImplSelectNextEvent
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEvents
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCurrentTime
</UL>

<P><STRONG><a name="[f5]"></a>DrawCurrentTime</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, day_view.o(i.DrawCurrentTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DrawCurrentTime &rArr; DrawHLine &rArr; BSP_LCD_DrawFastHLine &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentCalendarTime
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoTimeslotsOverlap
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTimeslotsAndEvents
</UL>

<P><STRONG><a name="[f9]"></a>DrawDayNumbers</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, month_view.o(i.DrawDayNumbers))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = DrawDayNumbers &rArr; DrawString &rArr; BSP_LCD_DrawString &rArr; BSP_LCD_DrawChar &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawString
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateDayPosition
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImplMonthViewDraw
</UL>

<P><STRONG><a name="[fc]"></a>DrawDayOfWeekHeader</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, month_view.o(i.DrawDayOfWeekHeader))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DrawDayOfWeekHeader &rArr; DrawString &rArr; BSP_LCD_DrawString &rArr; BSP_LCD_DrawChar &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawString
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImplMonthViewDraw
</UL>

<P><STRONG><a name="[fd]"></a>DrawEventEndtime</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, scheduler_view.o(i.DrawEventEndtime))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = DrawEventEndtime &rArr; DrawString &rArr; BSP_LCD_DrawString &rArr; BSP_LCD_DrawChar &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillRect
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawString
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddMinsToTimeslot
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerViewDraw
</UL>

<P><STRONG><a name="[ff]"></a>DrawEventName</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, scheduler_view.o(i.DrawEventName))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = DrawEventName &rArr; DrawString &rArr; BSP_LCD_DrawString &rArr; BSP_LCD_DrawChar &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillRect
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawString
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerViewDraw
</UL>

<P><STRONG><a name="[100]"></a>DrawEventStartTime</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, scheduler_view.o(i.DrawEventStartTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = DrawEventStartTime &rArr; DrawString &rArr; BSP_LCD_DrawString &rArr; BSP_LCD_DrawChar &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillRect
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawString
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerViewDraw
</UL>

<P><STRONG><a name="[101]"></a>DrawEvents</STRONG> (Thumb, 430 bytes, Stack size 40 bytes, day_view.o(i.DrawEvents))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DrawEvents &rArr; FillRect &rArr; BSP_LCD_FillRect &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillRect
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeslotStartSplitMins
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoTimeslotsOverlap
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTimeslotsAndEvents
</UL>

<P><STRONG><a name="[f8]"></a>DrawHLine</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, lab5.o(i.DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DrawHLine &rArr; BSP_LCD_DrawFastHLine &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_DrawFastHLine
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Color565
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHeaderSchedulerView
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMonthGrid
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHeaderMonthView
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDayOfWeekHeader
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTimeslots
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHeaderDayView
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCurrentTime
</UL>

<P><STRONG><a name="[f0]"></a>DrawHeaderDayView</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, day_view.o(i.DrawHeaderDayView))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = DrawHeaderDayView &rArr; DrawString &rArr; BSP_LCD_DrawString &rArr; BSP_LCD_DrawChar &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawString
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayViewDraw
</UL>

<P><STRONG><a name="[104]"></a>DrawHeaderMonthView</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, month_view.o(i.DrawHeaderMonthView))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = DrawHeaderMonthView &rArr; DrawString &rArr; BSP_LCD_DrawString &rArr; BSP_LCD_DrawChar &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawString
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImplMonthViewDraw
</UL>

<P><STRONG><a name="[105]"></a>DrawHeaderSchedulerView</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, scheduler_view.o(i.DrawHeaderSchedulerView))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = DrawHeaderSchedulerView &rArr; DrawString &rArr; BSP_LCD_DrawString &rArr; BSP_LCD_DrawChar &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawString
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerViewDraw
</UL>

<P><STRONG><a name="[106]"></a>DrawKeyBoardIfNeeded</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, scheduler_view.o(i.DrawKeyBoardIfNeeded))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = DrawKeyBoardIfNeeded &rArr; DrawString &rArr; BSP_LCD_DrawString &rArr; BSP_LCD_DrawChar &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillRect
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawString
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerViewDraw
</UL>

<P><STRONG><a name="[107]"></a>DrawMonthGrid</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, month_view.o(i.DrawMonthGrid))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DrawMonthGrid &rArr; DrawVLine &rArr; BSP_LCD_DrawFastVLine &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVLine
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImplMonthViewDraw
</UL>

<P><STRONG><a name="[109]"></a>DrawSaveAndDeleteButtons</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, scheduler_view.o(i.DrawSaveAndDeleteButtons))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DrawSaveAndDeleteButtons &rArr; DrawString &rArr; BSP_LCD_DrawString &rArr; BSP_LCD_DrawChar &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillRect
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawString
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerViewDraw
</UL>

<P><STRONG><a name="[10a]"></a>DrawSelectedDayIndicator</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, month_view.o(i.DrawSelectedDayIndicator))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DrawSelectedDayIndicator &rArr; FillRect &rArr; BSP_LCD_FillRect &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillRect
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateDayPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImplMonthViewDraw
</UL>

<P><STRONG><a name="[10b]"></a>DrawSelectionBullet</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, scheduler_view.o(i.DrawSelectionBullet))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DrawSelectionBullet &rArr; FillRect &rArr; BSP_LCD_FillRect &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSelectionBulletIfNeeded
</UL>

<P><STRONG><a name="[10c]"></a>DrawSelectionBulletIfNeeded</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, scheduler_view.o(i.DrawSelectionBulletIfNeeded))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DrawSelectionBulletIfNeeded &rArr; DrawSelectionBullet &rArr; FillRect &rArr; BSP_LCD_FillRect &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSelectionBullet
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerViewDraw
</UL>

<P><STRONG><a name="[fb]"></a>DrawString</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, lab5.o(i.DrawString))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = DrawString &rArr; BSP_LCD_DrawString &rArr; BSP_LCD_DrawChar &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_DrawString
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Color565
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSaveAndDeleteButtons
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawKeyBoardIfNeeded
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHeaderSchedulerView
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventStartTime
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventName
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventEndtime
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHeaderMonthView
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDayOfWeekHeader
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDayNumbers
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTimeslots
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHeaderDayView
</UL>

<P><STRONG><a name="[10d]"></a>DrawTimeslots</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, day_view.o(i.DrawTimeslots))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = DrawTimeslots &rArr; DrawString &rArr; BSP_LCD_DrawString &rArr; BSP_LCD_DrawChar &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawString
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTimeslotsAndEvents
</UL>

<P><STRONG><a name="[f1]"></a>DrawTimeslotsAndEvents</STRONG> (Thumb, 94 bytes, Stack size 88 bytes, day_view.o(i.DrawTimeslotsAndEvents))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = DrawTimeslotsAndEvents &rArr; DrawTimeslots &rArr; DrawString &rArr; BSP_LCD_DrawString &rArr; BSP_LCD_DrawChar &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTimeslots
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEvents
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCurrentTime
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateTimeslots
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayViewDraw
</UL>

<P><STRONG><a name="[108]"></a>DrawVLine</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, lab5.o(i.DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DrawVLine &rArr; BSP_LCD_DrawFastVLine &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_DrawFastVLine
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Color565
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMonthGrid
</UL>

<P><STRONG><a name="[fe]"></a>FillRect</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, lab5.o(i.FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FillRect &rArr; BSP_LCD_FillRect &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_FillRect
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Color565
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSelectionBullet
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSaveAndDeleteButtons
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawKeyBoardIfNeeded
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventStartTime
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventName
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventEndtime
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSelectedDayIndicator
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEvents
</UL>

<P><STRONG><a name="[ee]"></a>FillScreen</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lab5.o(i.FillScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FillScreen &rArr; BSP_LCD_FillScreen &rArr; BSP_LCD_FillRect &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_FillScreen
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Color565
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControllerUpdate
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayViewDraw
</UL>

<P><STRONG><a name="[f6]"></a>GetCurrentCalendarTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lab5.o(i.GetCurrentCalendarTime))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCurrentTime
</UL>

<P><STRONG><a name="[10f]"></a>GetDayOfWeek</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, date_time_lib.o(i.GetDayOfWeek))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GetDayOfWeek &rArr; determinedaycode &rArr; __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;determinedaycode
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNumDaysInMonth
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImplSetMonthInfo
</UL>

<P><STRONG><a name="[f3]"></a>GetDayView</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, day_view.o(i.GetDayView))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GetDayView &rArr; calloc &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDayView
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDayViewController
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayViewSetup
</UL>

<P><STRONG><a name="[113]"></a>GetMonthView</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, month_view.o(i.GetMonthView))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GetMonthView &rArr; calloc &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMonthView
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMonthViewController
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MonthViewSetup
</UL>

<P><STRONG><a name="[111]"></a>GetNumDaysInMonth</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, date_time_lib.o(i.GetNumDaysInMonth))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetNumDaysInMonth
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsLeapYear
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayOfWeek
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImplSetMonthInfo
</UL>

<P><STRONG><a name="[116]"></a>GetSchedulerView</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, scheduler_view.o(i.GetSchedulerView))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GetSchedulerView &rArr; calloc &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSchedulerView
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSchedulerViewController
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerViewSetup
</UL>

<P><STRONG><a name="[97]"></a>ImplCopyScheduledEvent</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scheduler_view.o(i.ImplCopyScheduledEvent))
<BR>[Address Reference Count : 1]<UL><LI> scheduler_view.o(i.InitSchedulerView)
</UL>
<P><STRONG><a name="[88]"></a>ImplGetCurrTimeslot</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, day_view.o(i.ImplGetCurrTimeslot))
<BR>[Address Reference Count : 1]<UL><LI> day_view.o(i.InitDayView)
</UL>
<P><STRONG><a name="[84]"></a>ImplGetDate</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, day_view.o(i.ImplGetDate))
<BR>[Address Reference Count : 1]<UL><LI> day_view.o(i.InitDayView)
</UL>
<P><STRONG><a name="[8f]"></a>ImplGetDateMonthView</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, month_view.o(i.ImplGetDateMonthView))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ImplGetDateMonthView &rArr; PositionToDayOfMonth
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PositionToDayOfMonth
</UL>
<BR>[Address Reference Count : 1]<UL><LI> month_view.o(i.InitMonthView)
</UL>
<P><STRONG><a name="[98]"></a>ImplGetSchedulerViewState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scheduler_view.o(i.ImplGetSchedulerViewState))
<BR>[Address Reference Count : 1]<UL><LI> scheduler_view.o(i.InitSchedulerView)
</UL>
<P><STRONG><a name="[8c]"></a>ImplGetSelectedEvent</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, day_view.o(i.ImplGetSelectedEvent))
<BR>[Address Reference Count : 1]<UL><LI> day_view.o(i.InitDayView)
</UL>
<P><STRONG><a name="[8e]"></a>ImplMonthViewDraw</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, month_view.o(i.ImplMonthViewDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = ImplMonthViewDraw &rArr; DrawDayNumbers &rArr; DrawString &rArr; BSP_LCD_DrawString &rArr; BSP_LCD_DrawChar &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSelectedDayIndicator
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMonthGrid
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHeaderMonthView
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDayOfWeekHeader
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDayNumbers
</UL>
<BR>[Address Reference Count : 1]<UL><LI> month_view.o(i.InitMonthView)
</UL>
<P><STRONG><a name="[9e]"></a>ImplMoveFocusDown</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, scheduler_view.o(i.ImplMoveFocusDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ImplMoveFocusDown &rArr; AddMinsToTimeslot
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddMinsToTimeslot
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scheduler_view.o(i.InitSchedulerView)
</UL>
<P><STRONG><a name="[9f]"></a>ImplMoveFocusLeft</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, scheduler_view.o(i.ImplMoveFocusLeft))
<BR>[Address Reference Count : 1]<UL><LI> scheduler_view.o(i.InitSchedulerView)
</UL>
<P><STRONG><a name="[a0]"></a>ImplMoveFocusRight</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, scheduler_view.o(i.ImplMoveFocusRight))
<BR>[Address Reference Count : 1]<UL><LI> scheduler_view.o(i.InitSchedulerView)
</UL>
<P><STRONG><a name="[9d]"></a>ImplMoveFocusUp</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, scheduler_view.o(i.ImplMoveFocusUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ImplMoveFocusUp &rArr; SubMinsFromTimeslot
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubMinsFromTimeslot
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scheduler_view.o(i.InitSchedulerView)
</UL>
<P><STRONG><a name="[9b]"></a>ImplSelectCurrElement</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, scheduler_view.o(i.ImplSelectCurrElement))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ImplSelectCurrElement &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scheduler_view.o(i.InitSchedulerView)
</UL>
<P><STRONG><a name="[93]"></a>ImplSelectNextDay</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, month_view.o(i.ImplSelectNextDay))
<BR>[Address Reference Count : 1]<UL><LI> month_view.o(i.InitMonthView)
</UL>
<P><STRONG><a name="[89]"></a>ImplSelectNextEvent</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, day_view.o(i.ImplSelectNextEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ImplSelectNextEvent &rArr; DoTimeslotsOverlap
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoTimeslotsOverlap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> day_view.o(i.InitDayView)
</UL>
<P><STRONG><a name="[85]"></a>ImplSelectNextTimeslot</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, day_view.o(i.ImplSelectNextTimeslot))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ImplSelectNextTimeslot &rArr; AddMinsToTimeslot
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddMinsToTimeslot
</UL>
<BR>[Address Reference Count : 1]<UL><LI> day_view.o(i.InitDayView)
</UL>
<P><STRONG><a name="[91]"></a>ImplSelectNextWeek</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, month_view.o(i.ImplSelectNextWeek))
<BR>[Address Reference Count : 1]<UL><LI> month_view.o(i.InitMonthView)
</UL>
<P><STRONG><a name="[94]"></a>ImplSelectPrevDay</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, month_view.o(i.ImplSelectPrevDay))
<BR>[Address Reference Count : 1]<UL><LI> month_view.o(i.InitMonthView)
</UL>
<P><STRONG><a name="[8a]"></a>ImplSelectPrevEvent</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, day_view.o(i.ImplSelectPrevEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ImplSelectPrevEvent &rArr; DoTimeslotsOverlap
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoTimeslotsOverlap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> day_view.o(i.InitDayView)
</UL>
<P><STRONG><a name="[86]"></a>ImplSelectPrevTimeslot</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, day_view.o(i.ImplSelectPrevTimeslot))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ImplSelectPrevTimeslot &rArr; SubMinsFromTimeslot
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubMinsFromTimeslot
</UL>
<BR>[Address Reference Count : 1]<UL><LI> day_view.o(i.InitDayView)
</UL>
<P><STRONG><a name="[92]"></a>ImplSelectPrevWeek</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, month_view.o(i.ImplSelectPrevWeek))
<BR>[Address Reference Count : 1]<UL><LI> month_view.o(i.InitMonthView)
</UL>
<P><STRONG><a name="[87]"></a>ImplSetCurrTimeslot</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, day_view.o(i.ImplSetCurrTimeslot))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ImplSetCurrTimeslot
</UL>
<BR>[Address Reference Count : 1]<UL><LI> day_view.o(i.InitDayView)
</UL>
<P><STRONG><a name="[83]"></a>ImplSetDate</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, day_view.o(i.ImplSetDate))
<BR>[Address Reference Count : 1]<UL><LI> day_view.o(i.InitDayView)
</UL>
<P><STRONG><a name="[99]"></a>ImplSetEventBaseInfo</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, scheduler_view.o(i.ImplSetEventBaseInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ImplSetEventBaseInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scheduler_view.o(i.InitSchedulerView)
</UL>
<P><STRONG><a name="[8b]"></a>ImplSetEvents</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, day_view.o(i.ImplSetEvents))
<BR>[Address Reference Count : 1]<UL><LI> day_view.o(i.InitDayView)
</UL>
<P><STRONG><a name="[9a]"></a>ImplSetExistingEventInfo</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, scheduler_view.o(i.ImplSetExistingEventInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ImplSetExistingEventInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scheduler_view.o(i.InitSchedulerView)
</UL>
<P><STRONG><a name="[90]"></a>ImplSetMonthInfo</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, month_view.o(i.ImplSetMonthInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ImplSetMonthInfo &rArr; GetDayOfWeek &rArr; determinedaycode &rArr; __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNumDaysInMonth
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayOfWeek
</UL>
<BR>[Address Reference Count : 1]<UL><LI> month_view.o(i.InitMonthView)
</UL>
<P><STRONG><a name="[9c]"></a>ImplUnselectCurrElement</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, scheduler_view.o(i.ImplUnselectCurrElement))
<BR>[Address Reference Count : 1]<UL><LI> scheduler_view.o(i.InitSchedulerView)
</UL>
<P><STRONG><a name="[112]"></a>InitDayView</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, day_view.o(i.InitDayView))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = InitDayView &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayView
</UL>

<P><STRONG><a name="[f4]"></a>InitDayViewController</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, day_view_controller.o(i.InitDayViewController))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = InitDayViewController &rArr; GetDayView &rArr; calloc &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayView
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayViewSetup
</UL>

<P><STRONG><a name="[114]"></a>InitMonthView</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, month_view.o(i.InitMonthView))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = InitMonthView &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonthView
</UL>

<P><STRONG><a name="[11c]"></a>InitMonthViewController</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, month_view_controller.o(i.InitMonthViewController))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = InitMonthViewController &rArr; GetMonthView &rArr; calloc &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonthView
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MonthViewSetup
</UL>

<P><STRONG><a name="[117]"></a>InitSchedulerView</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, scheduler_view.o(i.InitSchedulerView))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = InitSchedulerView &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSchedulerView
</UL>

<P><STRONG><a name="[11d]"></a>InitSchedulerViewController</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, scheduler_view_controller.o(i.InitSchedulerViewController))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = InitSchedulerViewController &rArr; GetSchedulerView &rArr; calloc &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSchedulerView
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerViewSetup
</UL>

<P><STRONG><a name="[12b]"></a>IsBackButtonPressed</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lab5.o(i.IsBackButtonPressed))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSchedulerView
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMonthView
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDayView
</UL>

<P><STRONG><a name="[127]"></a>IsDownButtonPressed</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lab5.o(i.IsDownButtonPressed))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSchedulerView
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMonthView
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDayView
</UL>

<P><STRONG><a name="[115]"></a>IsLeapYear</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, date_time_lib.o(i.IsLeapYear))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNumDaysInMonth
</UL>

<P><STRONG><a name="[128]"></a>IsLeftButtonPressed</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lab5.o(i.IsLeftButtonPressed))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSchedulerView
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMonthView
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDayView
</UL>

<P><STRONG><a name="[129]"></a>IsRightButtonPressed</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lab5.o(i.IsRightButtonPressed))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSchedulerView
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMonthView
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDayView
</UL>

<P><STRONG><a name="[12a]"></a>IsSelectButtonPressed</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lab5.o(i.IsSelectButtonPressed))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSchedulerView
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMonthView
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDayView
</UL>

<P><STRONG><a name="[126]"></a>IsUpButtonPressed</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lab5.o(i.IsUpButtonPressed))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSchedulerView
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMonthView
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDayView
</UL>

<P><STRONG><a name="[125]"></a>LoadEventsForDay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lab5.o(i.LoadEventsForDay))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDayView
</UL>

<P><STRONG><a name="[11e]"></a>MonthViewSetup</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lab5.o(i.MonthViewSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MonthViewSetup &rArr; InitMonthViewController &rArr; GetMonthView &rArr; calloc &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMonthViewController
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonthView
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[118]"></a>PositionToDayOfMonth</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, month_view.o(i.PositionToDayOfMonth))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PositionToDayOfMonth
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImplGetDateMonthView
</UL>

<P><STRONG><a name="[133]"></a>Profile_Init</STRONG> (Thumb, 418 bytes, Stack size 0 bytes, profile.o(i.Profile_Init))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ef]"></a>RecalculateEventPlacement</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, day_view.o(i.RecalculateEventPlacement))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = RecalculateEventPlacement &rArr; DoTimeslotsOverlap
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoTimeslotsOverlap
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayViewDraw
</UL>

<P><STRONG><a name="[12c]"></a>SaveEvent</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lab5.o(i.SaveEvent))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSchedulerView
</UL>

<P><STRONG><a name="[bf]"></a>Scheduler</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, os.o(i.Scheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Scheduler &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[96]"></a>SchedulerViewDraw</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, scheduler_view.o(i.SchedulerViewDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = SchedulerViewDraw &rArr; DrawKeyBoardIfNeeded &rArr; DrawString &rArr; BSP_LCD_DrawString &rArr; BSP_LCD_DrawChar &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSelectionBulletIfNeeded
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSaveAndDeleteButtons
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawKeyBoardIfNeeded
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHeaderSchedulerView
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventStartTime
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventName
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEventEndtime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scheduler_view.o(i.InitSchedulerView)
</UL>
<P><STRONG><a name="[124]"></a>SchedulerViewSetup</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lab5.o(i.SchedulerViewSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SchedulerViewSetup &rArr; InitSchedulerViewController &rArr; GetSchedulerView &rArr; calloc &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSchedulerViewController
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSchedulerView
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[119]"></a>SubMinsFromTimeslot</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, date_time_lib.o(i.SubMinsFromTimeslot))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SubMinsFromTimeslot
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImplMoveFocusUp
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImplSelectPrevTimeslot
</UL>

<P><STRONG><a name="[54]"></a>TIMER5A_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, texas.o(i.TIMER5A_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER5A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[102]"></a>TimeslotStartSplitMins</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, date_time_lib.o(i.TimeslotStartSplitMins))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TimeslotStartSplitMins
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEvents
</UL>

<P><STRONG><a name="[8d]"></a>UpdateDayView</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, day_view_controller.o(i.UpdateDayView))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UpdateDayView
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadEventsForDay
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsUpButtonPressed
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSelectButtonPressed
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsRightButtonPressed
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsLeftButtonPressed
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsDownButtonPressed
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBackButtonPressed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> day_view_controller.o(i.InitDayViewController)
</UL>
<P><STRONG><a name="[95]"></a>UpdateMonthView</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, month_view_controller.o(i.UpdateMonthView))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UpdateMonthView
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsUpButtonPressed
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSelectButtonPressed
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsRightButtonPressed
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsLeftButtonPressed
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsDownButtonPressed
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBackButtonPressed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> month_view_controller.o(i.InitMonthViewController)
</UL>
<P><STRONG><a name="[a1]"></a>UpdateSchedulerView</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, scheduler_view_controller.o(i.UpdateSchedulerView))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UpdateSchedulerView
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveEvent
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsUpButtonPressed
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSelectButtonPressed
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsRightButtonPressed
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsLeftButtonPressed
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsDownButtonPressed
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBackButtonPressed
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scheduler_view_controller.o(i.InitSchedulerViewController)
</UL>
<P><STRONG><a name="[5c]"></a>WideTimer3A_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bsp.o(i.WideTimer3A_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WideTimer3A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>WideTimer4A_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bsp.o(i.WideTimer4A_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WideTimer4A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>WideTimer5A_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bsp.o(i.WideTimer5A_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WideTimer5A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c123.o(RESET)
</UL>
<P><STRONG><a name="[cc]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[110]"></a>determinedaycode</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, date_time_lib.o(i.determinedaycode))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = determinedaycode &rArr; __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayOfWeek
</UL>

<P><STRONG><a name="[b8]"></a>main</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, lab5.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = main &rArr; ControllerUpdate &rArr; FillScreen &rArr; BSP_LCD_FillScreen &rArr; BSP_LCD_FillRect &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Profile_Init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControllerUpdate
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_FillScreen
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Clock_InitFastest
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Button2_Init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Button1_Init
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulerViewSetup
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MonthViewSetup
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayViewSetup
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableInterrupts
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[177]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)

<P><STRONG><a name="[136]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[130]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;determinedaycode
</UL>

<P><STRONG><a name="[13a]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[131]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;determinedaycode
</UL>

<P><STRONG><a name="[13b]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[12e]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;determinedaycode
</UL>

<P><STRONG><a name="[178]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[139]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[138]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[12f]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;determinedaycode
</UL>

<P><STRONG><a name="[13c]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[ea]"></a>ST7735_InitR</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, bsp.o(i.ST7735_InitR))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ST7735_InitR &rArr; BSP_LCD_FillScreen &rArr; BSP_LCD_FillRect &rArr; setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writedata
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writecommand
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commonInit
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commandList
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_FillScreen
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
</UL>

<P><STRONG><a name="[120]"></a>commandList</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, bsp.o(i.commandList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = commandList &rArr; BSP_Delay1ms
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writedata
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writecommand
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Delay1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commonInit
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_InitR
</UL>

<P><STRONG><a name="[11f]"></a>commonInit</STRONG> (Thumb, 452 bytes, Stack size 8 bytes, bsp.o(i.commonInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = commonInit &rArr; commandList &rArr; BSP_Delay1ms
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commandList
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Delay1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_InitR
</UL>

<P><STRONG><a name="[e2]"></a>pushColor</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp.o(i.pushColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pushColor
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writedata
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_DrawChar
</UL>

<P><STRONG><a name="[e1]"></a>setAddrWindow</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, bsp.o(i.setAddrWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = setAddrWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writedata
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writecommand
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_FillRect
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_DrawFastVLine
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_DrawFastHLine
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_DrawChar
</UL>

<P><STRONG><a name="[121]"></a>writecommand</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, bsp.o(i.writecommand))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAddrWindow
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commandList
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_InitR
</UL>

<P><STRONG><a name="[e4]"></a>writedata</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, bsp.o(i.writedata))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAddrWindow
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pushColor
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commandList
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_InitR
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_FillRect
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_DrawFastVLine
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_DrawFastHLine
</UL>

<P><STRONG><a name="[13d]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
</UL>

<P><STRONG><a name="[137]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[81]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
